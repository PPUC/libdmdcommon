name: libdmdcommon
on:
  push:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build libdmdcommon-${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: win-x64
            platform-name: x64
            libdmdcommon: dmdcommon.dll
          - os: windows-latest
            platform: win-x86
            platform-name: Win32
            libdmdcommon: dmdcommon.dll
          - os: macos-latest
            platform: macOS-x64
            libdmdcommon: libdmdcommon.dylib
          - os: macos-latest
            platform: macOS-arm64
            libdmdcommon: libdmdcommon.dylib
          - os: ubuntu-latest
            platform: linux-x64
            libdmdcommon: libdmdcommon.so
          - os: ubuntu-latest
            platform: android-arm64-v8a
            libdmdcommon: libdmdcommon.so
    steps:
      - uses: actions/checkout@v3
      - name: Build libdmdcommon-${{ matrix.platform }}
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            if [[ "${{ matrix.platform-name }}" == "Win32" ]]; then
              cmake -G "Visual Studio 17 2022" -A ${{ matrix.platform-name }} -B build -DUSE_WIN32=ON
            else
              cmake -G "Visual Studio 17 2022" -A ${{ matrix.platform-name }} -B build
            fi
            cmake --build build --config Release
          else
            if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
              if [[ "${{ matrix.platform }}" == "macOS-arm64" ]]; then
                cmake -DCMAKE_BUILD_TYPE=Release -B build/Release -DUSE_OSXARM=ON
              else
                cmake -DCMAKE_BUILD_TYPE=Release -B build/Release -DUSE_OSXINTEL=ON
              fi
            else
              cmake -DCMAKE_BUILD_TYPE=Release -B build/Release
            fi
            cmake --build build/Release
          fi
      - run: |
          mkdir tmp
          cp build/Release/${{ matrix.libdmdcommon }} tmp
      - uses: actions/upload-artifact@v3
        with:
          name: libdmdcommon-${{ matrix.platform }}
          path: tmp

  post-build:
    runs-on: macos-latest
    needs: [ build ]
    name: Build libdmdcommon-macOS
    steps:
      - uses: actions/download-artifact@v3
      - run: |
          mkdir tmp
          lipo -create -output tmp/libdmdcommon.dylib \
             libdmdcommon-macOS-x64/libdmdcommon.dylib \
             libdmdcommon-macOS-arm64/libdmdcommon.dylib
      - uses: actions/upload-artifact@v3
        with:
          name: libdmdcommon-macOS
          path: tmp
